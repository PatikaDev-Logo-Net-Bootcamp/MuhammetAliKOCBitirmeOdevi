@using Business.DTO
@using UI.Helpers
@{
    ViewData["Title"] = "Faturalar";
    Layout = "_Layout2";
}

@model PaginatedList<FlatDTO>

@{
    ViewData["Title"] = "Index";
}

<h2>@ViewBag.BillName Genel Liste</h2>

@*<p>
    <a asp-action="Create">Create New</a>
    </p>*@

 

<button style="float:right;" type="button" class="btn btn-info btnAdd"> Toplu Fatura Girişi</button>


<form asp-action="BillFlatList" method="get">
    <div class="form-actions no-color">
      
        <div class=row>
@*            <div class="col-md-3" style="padding-left:0px; padding-right:0px;">

                  <select name="SearchBlok"  class = "form-control">
                            @foreach(BlockDTO blok in @ViewBag.Blocks)
                            {
                                 <option value="@blok.Id">@blok.Name</option>
                            }                   
                  </select>
            </div>*@
            <input type="hidden" value="@ViewBag.BillId" id="BillIdinSearch" name="billId"/>


            <div class="col-md-3" style="padding-left:0px; padding-right:0px;">
                        <input  type="text" name="SearchString" value="@ViewData["CurrentFilter"]" class="form-control" />
            </div>
            <div class="col-md-3" style="padding-left:0px; padding-right:0px;">
                  <input type="submit" value="Ara" class="btn btn-success" style="float:left"/>          
            </div>
        </div>
    
          
    
    </div>

</form>

<table class="table table-hover">
    <thead>
        <tr>
            <th scope="col">
                <a asp-action="Index" asp-route-sortOrder="@ViewData["BlockSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Daire</a>
            </th>
            <th scope="col">
                Fatura Tip
            </th>
            <th scope="col">
                Fatura Tutar
            </th>
            <th scope="col">
                Açıklama
            </th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
 
                <td class="Flat">
                   @(item.BlockName + " .Blok " + @item.Floor + " .Kat No:" + @item.No )
                </td>
                <td class="BillTypeName">
                    @item.BillFlatDTO?.BillDTO.BillTypeName
                </td>
                <td class="Amount">
                    @item.BillFlatDTO?.Amount
                </td>
                 <td class="Description">
                    @item.BillFlatDTO?.Description
                </td>
                <td>
                    @if(item.BillFlatDTO != null)
                    {
                          <button type="button" class="btn btn-primary btnUpdate" data-flatid = "@item.Id" data-billid ="@ViewBag.BillId" data-id="@item.BillFlatDTO.Id">Güncelle</button>
                          <button type="button" class="btn btn-danger btnDelete" data-flatid = "@item.Id" data-billid ="@ViewBag.BillId"  data-id="@item.BillFlatDTO.Id">Sil</button>
                        
                    }else{
                            <button type="button" class="btn btn-info btnAdd" data-flatid="@item.Id"  data-billid ="@ViewBag.BillId" data-id="0">Ekle</button>
                    }

                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="BillFlatList"
    asp-route-billId="@ViewData["BillId"]"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Önceki
</a>
<a asp-action="BillFlatList"
    asp-route-billId="@ViewData["BillId"]"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Sonraki
</a>
@*
<p>Toplam  <span id="Count">@Model.Count()</span> kayıt bulunmuştur.</p>*@


<!-- Modal Add -->
<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <form id="FlatAddForm">
                @Html.AntiForgeryToken()

                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Fatura</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @Html.HiddenFor(x=>x.FirstOrDefault().BillFlatDTO.Id, new { @id="Id"})
                    @Html.HiddenFor(x=>x.FirstOrDefault().BillFlatDTO.BillId, new { @id="BillId"})
                    @Html.HiddenFor(x=>x.FirstOrDefault().BillFlatDTO.FlatId, new { @id="FlatId"})

@*                      <input type="hidden" value="@ViewBag.BillId" name="billId"/>
                      <input type="hidden" value="0" id="FlatId" name="flatId" />*@

                    <div class="form-group">
                        <p>@ViewBag.BillName</p>
                    </div>

@*                    <div class="form-group">
                        <label>Fatura Miktarı</label>
                        
                        <input  type="text" name="amount" value="0" class="form-control" />

                    </div>   *@

                    <div class="form-group">
                        <label>Fatura Miktarı</label>
                        <input asp-for="@Model.FirstOrDefault().BillFlatDTO.Amount" id="Amount" type="text" class="form-control" placeholder="">
                        @Html.ValidationMessageFor(model => model.FirstOrDefault().BillFlatDTO.Amount, "", new { @class = "text-danger" })
                    </div>
                    
                    <div class="form-group">
                        <label>Açıklama</label>
                        <input asp-for="@Model.FirstOrDefault().BillFlatDTO.Description" id="Description" type="text" class="form-control" placeholder="Açıklama">
                        @Html.ValidationMessageFor(model => model.FirstOrDefault().BillFlatDTO.Description, "", new { @class = "text-danger" })
                    </div>                    

                    <div style="min-height:40px">
                        <p id="pMesajModal"></p>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Kapat</button>
                    <button type="submit" class="btn btn-info" id="btnSubmit">Ekle</button>
                </div>

            </form>

        </div>
    </div>
</div>



@section Scripts {

<script type="text/javascript">
    var table;
    var clickedBottom;
    var clickedRow;
    $(document).ready( function () {

        $("#Amount").rules("remove", "number");


        //$( ".btnAdd").on( "click", function() {
               $(document).on('click','.btnAdd', function(){
            clickedBottom = $(this);
            clickedRow = $(this).parent().parent();

            let flatid = $(this).data("flatid");
            let billId = $(this).data("billid");

             modalEmpty(0,flatid,billId);
              $('#modal').modal();
        });

        $(document).on('click','.btnUpdate', function(){
            clickedBottom = $(this);
            clickedRow = $(this).parent().parent();
                let id = $(this).data("id");
                let flatid = $(this).data("flatid");
                let billId = $(this).data("billid");

                modalEmpty(id,flatid,billId);
             getBillForUpdate(id);
        });

        $(document).on('click','.btnDelete', function(){
          if (confirm('Dairenin Fatura Bilgisini Silmek İstediğinizden Emin Misiniz?')) {
              clickedBottom = $(this);
              clickedRow = $(this).parent().parent();
               let id = $(this).data("id");
               deleteFlat($(this),id);
            }
        });


        $( "#btnSubmit").on( "click", function(e) {
             e.preventDefault();

            $('#FlatAddForm').validate();

            if ($('#FlatAddForm').valid()) {
                if($('#Id').val()==0){
                    addBill();
                }else{
                      updateBill();
                }

            }
        });



    });
            function modalEmpty(id, flatid, billId){
                $('.field-validation-error').empty();//Daha önce validasyon mesajları gösterilmiş ise onları burada kaldırıyoruz.

                $("#Id").val(id);
                $("#FlatId").val(flatid);
                 $("#BillId").val(billId);

                console.log(id +  " - " + flatid);
                
                $("#Amount").val(0);
                $("#Description").val("");


                 if(id==0){
                    $('#btnSubmit').html("Ekle");
                     $('#btnSubmit').removeClass("btn-primary").addClass("btn-info");
                }else{
                      $('#btnSubmit').html("Güncelle");
                      $('#btnSubmit').removeClass("btn-info").addClass("btn-primary");
                }
            }


            function getBillForUpdate(id) {
                    $.ajax({
                            type: 'POST',
                            url: '/Bill/GetBillFlat',
                            contentType: 'application/x-www-form-urlencoded; charset=UTF-8', // when we use .serialize() this generates the data in query string format. this needs the default contentType (default content type is: contentType: 'application/x-www-form-urlencoded; charset=UTF-8') so it is optional, you can remove it
                            data: { id: id },
                            success: function (result) {

                                //console.log(result);
                                if(result.isSuccess){
                                    //$("#Id").val(result.data.id);
                                    //$("#FlatId").val(result.data.flatId);
                                    $("#Amount").val(result.data.amount);
                                    $("#Description").val(result.data.description);

                                    $('#modal').modal();
                                }else{

                                     $("#pMesajModal").text(result.errorMessage);
                                     $("#pMesajModal").css("color", "red");
                                }
                            },
                            error: function (xhr, ajaxOptions, thrownError) {
                                 alert(xhr.status );
                                 alert(thrownError);
                                 $("#pMesajModal").text("Hata! Tekrar deneyiniz. Hata almaya devam ediyorsanız; Lütfen yöneticinizle iletişime geçiniz!");
                                 $("#pMesajModal").css("color", "red");
                            }
                        })
            }

            var SetTimeOutId;
            function addBill() {
                    $("#pMesajModal").text("");
                    var data = $("#FlatAddForm").serialize();
                    console.log(data);
                    $.ajax({
                            type: 'POST',
                            url: '/Bill/AddBillFlat',
                            dataType: 'json',
                            //contentType: 'application/x-www-form-urlencoded; charset=UTF-8', // when we use .serialize() this generates the data in query string format. this needs the default contentType (default content type is: contentType: 'application/x-www-form-urlencoded; charset=UTF-8') so it is optional, you can remove it
                            data: data,
                            success: function (result) {
                                     if(result.isSuccess)
                                    {
                                        //console.log(result);
                                          $("#pMesajModal").text(result.successMessage);
                                          $("#pMesajModal").css("color", "green");

                                          clickedBottom.parent().html(
                                          "<button type='button' class='btn btn-primary btnUpdate' data-billid = '"+ result.data.billId + "' data-flatid = '" + result.data.flatId+"' data-id='"+result.data.id+"'>Güncelle</button>" +
                                          "<button type='button' class='btn btn-danger btnDelete' data-billid = '"+ result.data.billId + "' data-flatid = '" + result.data.flatId +"' data-id='"+result.data.id+"'>Sil</button>"
                                          );
                                          clickedRow.children(".Amount").html(result.data.amount);
                                          clickedRow.children(".Description").html(result.data.description);
                                          clickedRow.children(".BillTypeName").html(result.data.billDTO.billTypeName);

                                         SetTimeOutId =  setTimeout(function(){
                                                                        $('#modal').modal('hide');
                                                                        $("#pMesajModal").text("");
                                                                    }, 2500);
                                    }else{
                                        console.log(result.errorMessage);
                                         $("#pMesajModal").text(result.errorMessage);
                                         $("#pMesajModal").css("color", "red");
                                    }
                            },
                             error: function (xhr, ajaxOptions, thrownError) {
                                 alert(xhr.status );
                                 alert(thrownError);
                                 $("#pMesajModal").text("Hata! Tekrar deneyiniz. Hata almaya devam ediyorsanız; Lütfen yöneticinizle iletişime geçiniz!");
                                 $("#pMesajModal").css("color", "red");
                            }
                        })
            }

            //Add model kapanma anı.Kullanıcı elle kapatırsa modalı settime out  iptal edilsin!
            $('#modal').on('hide.bs.modal', function () {
                $("#pMesajModal").text("");
                clearTimeout(SetTimeOutId);
            });


            function updateBill() {
                    $("#pMesajModal").text("");
                    var data = $("#FlatAddForm").serialize();
                    $.ajax({
                            type: 'POST',
                            url: '/Bill/UpdateBillFlat',
                            dataType: 'json',
                            //contentType: 'application/x-www-form-urlencoded; charset=UTF-8', // when we use .serialize() this generates the data in query string format. this needs the default contentType (default content type is: contentType: 'application/x-www-form-urlencoded; charset=UTF-8') so it is optional, you can remove it
                            data: data,
                            success: function (result) {
                                    if(result.isSuccess)
                                    {
                                          $("#pMesajModal").text(result.successMessage);
                                          $("#pMesajModal").css("color", "green");

                                          clickedRow.children(".Amount").html(result.data.amount);
                                          clickedRow.children(".Description").html(result.data.description);
                                          clickedRow.children(".BillTypeName").html(result.data.billDTO.billTypeName);





                                          SetTimeOutId = setTimeout(function(){ $('#modal').modal('hide'), $("#pMesajModal").text("");}, 2500);
                                    }else{
                                         $("#pMesajModal").text(result.errorMessage);
                                         $("#pMesajModal").css("color", "red");
                                    }
                            },
                            error: function () {
                                   $("#pMesajModal").text("İşlem sırasında hata alınmıştır. Hatayı almaya devam ederseniz lütfen yöneticinizle iletişime geçiniz!");
                                   $("#pMesajModal").css("color", "red");
                            }
                        })


            }
            //update model kapanma anı.Kullanıcı elle kapatırsa modalı settime out  iptal edilsin!
            $('#modal').on('hide.bs.modal', function () {
                $("#pMesajModal").text("");
                clearTimeout(SetTimeOutId);
            });


            function deleteFlat(deleteButton, id) {
                    $("#pPageMesaj").text("");
                    $.ajax({
                            type: 'POST',
                            url: '/Bill/DeleteBillFlat',
                            contentType: 'application/x-www-form-urlencoded; charset=UTF-8', // when we use .serialize() this generates the data in query string format. this needs the default contentType (default content type is: contentType: 'application/x-www-form-urlencoded; charset=UTF-8') so it is optional, you can remove it
                            data: { id: id },
                            success: function (result) {
                                if(result.isSuccess)
                                {
                                    $("#pPageMesaj").text(result.successMessage);
                                    $("#pPageMesaj").css("color", "green");

                                          clickedRow.children(".Amount").html('');
                                          clickedRow.children(".Description").html('');
                                          clickedRow.children(".BillTypeName").html('');

                                          clickedBottom.parent().children(".btnUpdate").removeClass("btn-primary").addClass("btn-info").removeClass("btnUpdate").addClass("btnAdd").html("Ekle");
                                          clickedBottom.remove();
                                    

                                    //clickedRow.remove();

                                    setTimeout(function(){ $("#pPageMesaj").text("");}, 3000);
                                }else{
                                    $("#pPageMesaj").text(result.errorMessage);
                                    $("#pPageMesaj").css("color", "red");
                                }
                            },
                            error: function () {
                                $("#pPageMesaj").text("Silme işlemi sırasında hata alınmıştır. Hatayı almaya devam ederseniz lütfen yöneticinizle iletişime geçiniz!");
                                $("#pPageMesaj").css("color", "red");
                            }
                        })
            }

</script>

    }


